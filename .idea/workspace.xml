<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e3ce2c75-0126-48dc-a917-71cf2831dd61" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_test_check_0_9_0.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/misc.xml" afterPath="$PROJECT_DIR$/.idea/misc.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/project.clj" afterPath="$PROJECT_DIR$/project.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/string_layout/core.clj" afterPath="$PROJECT_DIR$/src/string_layout/core.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/string-layout.iml" afterPath="$PROJECT_DIR$/string-layout.iml" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_TABLE_DETAILS" value="true" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="string-layout" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1410">
              <caret line="47" column="0" lean-forward="false" selection-start-line="47" selection-start-column="0" selection-end-line="47" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="spec.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/string_layout/spec.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="450">
              <caret line="48" column="80" lean-forward="false" selection-start-line="48" selection-start-column="80" selection-end-line="48" selection-end-column="80" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="7950">
              <caret line="265" column="16" lean-forward="false" selection-start-line="265" selection-start-column="16" selection-end-line="265" selection-end-column="16" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="StringSeq.class" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/lang/StringSeq.class">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="120">
              <caret line="7" column="54" lean-forward="false" selection-start-line="7" selection-start-column="54" selection-end-line="7" selection-end-column="54" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="CharSequence.java" pinned="false" current-in-tab="false">
        <entry file="jar:///usr/lib/jvm/java-8-oracle/src.zip!/java/lang/CharSequence.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="870">
              <caret line="58" column="17" lean-forward="false" selection-start-line="58" selection-start-column="17" selection-end-line="58" selection-end-column="17" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="spec.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/spec.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="4410">
              <caret line="147" column="39" lean-forward="false" selection-start-line="147" selection-start-column="39" selection-end-line="147" selection-end-column="39" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="270">
              <caret line="9" column="52" lean-forward="false" selection-start-line="9" selection-start-column="52" selection-end-line="9" selection-end-column="52" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core_test.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1920">
              <caret line="64" column="35" lean-forward="false" selection-start-line="64" selection-start-column="35" selection-end-line="64" selection-end-column="35" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>tabular</find>
      <find>autotest</find>
      <find>execute-format</find>
      <find>repeat</find>
      <find>split</find>
      <find>,</find>
      <find>align-char</find>
      <find>col-widths</find>
      <find>layout</find>
      <find>Illegal</find>
      <find>c/and</find>
      <find>expand-fills</find>
      <find>e</find>
    </findStrings>
    <replaceStrings>
      <replace />
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/test/string_layout/core_test.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="/usr/lib/jvm/java-8-oracle/src.zip!/java/lang/CharSequence.java" />
        <option value="$PROJECT_DIR$/target/classes/string_layout/core$matias_test_one.class" />
        <option value="$PROJECT_DIR$/src/string_layout/string_layout/spec.clj" />
        <option value="$PROJECT_DIR$/src/string_layout/core.clj" />
        <option value="$PROJECT_DIR$/src/string_layout/spec.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="-1" />
    <option name="y" value="-11" />
    <option name="width" value="2562" />
    <option name="height" value="1612" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes />
  </component>
  <component name="PropertiesComponent">
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.IDE.editor.colors.Debugger" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/target/classes/string_layout/core$matias_test_zero.class" />
    <property name="SearchEverywhereHistoryKey" value="spec.clj&#9;FILE&#9;file:///home/mbjarland/projects/clojure/clj-string-layout/src/string_layout/spec.clj&#10;StringSeq&#9;PSI&#9;JAVA://clojure.lang.StringSeq&#10;project.cl&#9;FILE&#9;file:///home/mbjarland/projects/clojure/clj-string-layout/project.clj&#10;test&#9;FILE&#9;file:///Users/mbjarland/projects/clojure/clj-string-layout/test/string_layout/core_test.clj&#10;core.cl&#9;FILE&#9;file:///home/mbjarland/projects/clojure/string-layout/src/string_layout/core.clj&#10;core_test&#9;FILE&#9;file:///home/mbjarland/projects/clojure/string-layout/test/string_layout/core_test.clj" />
    <property name="FullScreen" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="cursive.last.file.extension./home/mbjarland/projects/clojure/clj-string-layout/src" value="clj" />
  </component>
  <component name="ReplState" timestamp="1493303056120">{:repl-history {:ide [], :local [{:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/coll-of (s/alt :col-align-expr ::col-align-expr\n                           :col-padding-char ::col-padding-char)\n                    :kind seq?)))&quot;, :offset 244, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;[x]foobar\&quot;)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/coll-of (s/alt :col-align-expr ::col-align-expr\n                           :col-padding-char (complement #{\\[ \\]}))\n                    :kind seq?)))&quot;, :offset 247, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;[r]f[oobar\&quot;)&quot;, :offset 33, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;[r]f[o\&quot;)&quot;, :offset 34, :ns &quot;string-layout.spec&quot;} {:command &quot;((complement #{\\[ \\]}) \\a)&quot;, :offset 25, :ns &quot;string-layout.spec&quot;} {:command &quot;((complement #{\\[ \\]}) \\[)&quot;, :offset 25, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/coll-of (s/alt :col-align-expr ::col-align-expr\n                           :col-padding-char (complement #{\\[ \\]})))))&quot;, :offset 216, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-expr ::col-align-expr\n                     :col-padding-char (complement #{\\[ \\]})))))&quot;, :offset 204, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;foo\&quot;)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;f[o\&quot;)&quot;, :offset 9, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;f[\&quot;)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;f]\&quot;)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/exercise ::layout-string 10)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/exercise ::layout-string 100)&quot;, :offset 31, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-char\n                     (complement #{\\[ \\]})))))&quot;, :offset 379, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/exercise ::layout-string 5)&quot;, :offset 29, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align--expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-char\n                     (complement #{\\[ \\]})))))&quot;, :offset 372, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;foo[x]\&quot;)&quot;, :offset 33, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;foobar[x]\&quot;)&quot;, :offset 34, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;fo[obar[x]\&quot;)&quot;, :offset 31, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align--expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 371, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-pad-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 374, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain ::layout-string \&quot;fo]obar[x]\&quot;)&quot;, :offset 31, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 386, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/explain-data ::layout-string \&quot;fo]obar[x]\&quot;)&quot;, :offset 15, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))\n         (s/conformer (partial apply str))))&quot;, :offset 429, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;fo]obar[x]\&quot;)&quot;, :offset 10, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;fo]obar[R]\&quot;)&quot;, :offset 37, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket (complement #{\\[ \\]})))))&quot;, :offset 365, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]})\n                          (s/conformer (partial apply str)))))))&quot;, :offset 452, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/and\n                       (s/+ (complement #{\\[ \\]}))\n                       (s/conformer (partial apply str))))\n                     )))&quot;, :offset 502, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))\n                     (s/conformer (partial apply str))))))&quot;, :offset 447, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))))))&quot;, :offset 392, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/con)&quot;, :offset 7} {:command &quot;(s/conform ::layout-string \&quot;foo[R]bar\&quot;)&quot;, :offset 37, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;[R]bar[L]baz[C]bob\&quot;)&quot;, :offset 28, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;foo[R]bar[L]baz[C]bob\&quot;)&quot;, :offset 49, :ns &quot;string-layout.spec&quot;} {:command &quot;(use 'clojure.repl)&quot;, :offset 19, :ns &quot;string-layout.spec&quot;} {:command &quot;(doc s/conform)&quot;, :offset 15, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string2\n  (s/and string?\n         not-empty\n         (s/conformer seq)\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 387, :ns &quot;string-layout.spec&quot;} {:command &quot;(def k (s/conform ::layout-string2 \&quot;foobar[R]\&quot;))&quot;, :offset 48, :ns &quot;string-layout.spec&quot;} {:command &quot;k&quot;, :offset 1, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string2\n  (s/and string?\n         not-empty\n         (s/conformer seq )\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 388, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string2\n  (s/and string?\n         not-empty\n         (s/conformer seq #(^StringSeq .s %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 406, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string2\n  (s/and string?\n         not-empty\n         (s/conformer seq #(.s %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 395, :ns &quot;string-layout.spec&quot;} {:command &quot;(apply str (seq \&quot;bob\&quot;))&quot;, :offset 20, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string2\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (complement #{\\[ \\]})))))&quot;, :offset 402, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/unform ::layout-string2 k)&quot;, :offset 29, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string2 \&quot;foobar[R]\&quot;)&quot;, :offset 27, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;foobar[R]\&quot;)&quot;, :offset 26, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;foobar[R]adf\&quot;)&quot;, :offset 40, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string2 \&quot;foobar[R]adf[C]dfsd[L]df\&quot;)&quot;, :offset 27, :ns &quot;string-layout.spec&quot;} {:command &quot;(def res (s/conform ::layout-string2 \&quot;foobar[R]adf[C]dfsd[L]df\&quot;))&quot;, :offset 65, :ns &quot;string-layout.spec&quot;} {:command &quot;res&quot;, :offset 3, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x])\n  [[] []]\n  res)&quot;, :offset 46, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r [:col-padding-non-bracket padv]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 161, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r [:col-padding-non-bracket (apply str padv)]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 178, :ns &quot;string-layout.spec&quot;} {:command &quot;(doc conj)&quot;, :offset 10, :ns &quot;string-layout.spec&quot;} {:command &quot;(conj [] 1)&quot;, :offset 10, :ns &quot;string-layout.spec&quot;} {:command &quot;(conj [] 1 2)&quot;, :offset 12, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r [:col-padding-non-bracket (apply str padv)] x) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 173, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (:col-align-char x)]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 239, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (get-in x [:col-align-bracket-expr :col-align-char)]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 271, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (get-in x [:col-align-bracket-expr :col-align-char])]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 272, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (:col-align-char (:col-align-bracket-expr x))]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 268, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[r padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [r (conj padv (second x))]\n      [(conj r \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 252, :ns &quot;string-layout.spec&quot;} {:command &quot;(conj [] [1 2 3])&quot;, :offset 15, :ns &quot;string-layout.spec&quot;} {:command &quot;(reduce \n  (fn [[res padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [res (conj padv (second x))]\n      [(conj res \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []])\n    \n    )\n  [[] []]\n  res)&quot;, :offset 129, :ns &quot;string-layout.spec&quot;} {:command &quot;(first (reduce \n  (fn [[res padv ] x]\n    (if (= :col-padding-non-bracket (first x))\n      [res (conj padv (second x))]\n      [(conj res \n             [:col-padding-non-bracket (apply str padv)] \n             [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n  [[] []]\n  res))&quot;, :offset 290, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))))\n         (s/conformer \n           (fn [v]\n             (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))))))&quot;, :offset 910, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))))\n         (s/conformer\n           (fn [v]\n             (println \&quot;getting in\&quot; v)\n             (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))))))&quot;, :offset 947, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))))\n         (s/conformer\n           (fn [v]\n             (prn \&quot;getting in\&quot; v)\n             (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))))))&quot;, :offset 943, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))))\n         (s/conformer\n           (fn [v]\n             (prn v)\n             (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))))))&quot;, :offset 930, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string \&quot;foobar[R]adf[C]dfsd[L]df\&quot;)&quot;, :offset 52, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket\n                     (s/+ (complement #{\\[ \\]}))))))&quot;, :offset 408, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (s/conformer\n           (fn [v]\n             (prn v)\n             (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))))))&quot;, :offset 930, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (s/conformer\n           (fn [v]\n             (prn v)\n             (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket-char (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket-char (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))))))&quot;, :offset 940, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (s/conformer\n           (fn [v]\n             (prn v)\n             (let [[head tail]\n                   (first (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket-char (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket-char (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v))]\n               (conj head [:col-padding-non-bracket-char (apply str tail)])\n               )))))&quot;, :offset 1071, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (s/conformer\n           (fn [v]\n             (prn v)\n             (let [[head tail]\n                   (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket-char (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket-char (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v)]\n               (conj head [:col-padding-non-bracket-char (apply str tail)])\n               )))))&quot;, :offset 1063, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string3 \&quot;foobar[R]adf[C]dfsd[L]df\&quot;)&quot;, :offset 27, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (s/conformer\n           (fn [v]\n             (let [[head tail]\n                   (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket-char (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding-non-bracket-char (apply str padv)]\n                                 [:col-align-bracket-expr (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v)]\n               (conj head [:col-padding-non-bracket-char (apply str tail)])\n               )))))&quot;, :offset 1042, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string3 \&quot;foobar\&quot;)&quot;, :offset 35, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string3 \&quot;f\&quot;)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string3 \&quot;\&quot;)&quot;, :offset 29, :ns &quot;string-layout.spec&quot;} {:command &quot;(not-empty \&quot;\&quot;)&quot;, :offset 14, :ns &quot;string-layout.spec&quot;} {:command &quot;(not-empty \&quot;d\&quot;)&quot;, :offset 13, :ns &quot;string-layout.spec&quot;} {:command &quot;if (not-empty \&quot;\&quot; \&quot;bob\&quot; \&quot;mary\&quot;)&quot;, :offset 30, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (comment (s/conformer\n           (fn [v]\n             (let [[head tail]\n                   (reduce\n                      (fn [[res padv ] x]\n                        (if (= :col-padding-non-bracket-char (first x))\n                          [res (conj padv (second x))]\n                          [(conj res\n                                 [:col-padding (apply str padv)]\n                                 [:col-align (get-in x [1 :col-align-char])]) []]))\n                      [[] []]\n                      v)]\n               if (not(conj head [:col-padding (apply str tail)])\n               )))))))&quot;, :offset 1013, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         ))&quot;, :offset 417, :ns &quot;string-layout.spec&quot;} {:command &quot;(defn char-seq-&gt;str-conformer [v]\n  (let [[head tail]\n        (reduce\n          (fn [[res padv ] x]\n            (if (= :col-padding-non-bracket-char (first x))\n\n              (if (empty? padv)\n                [res (conj padv (second x))]\n                [(conj res\n                       [:col-padding (apply str padv)]\n                       [:col-align (get-in x [1 :col-align-char])]) []]))\n            )\n\n          [[] []]\n          v)]\n    (if (empty? tail)\n      head\n      (conj head [:col-padding (apply str tail)]))))&quot;, :offset 526, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))\n         (s/conformer char-seq-&gt;str-conformer)))&quot;, :offset 454, :ns &quot;string-layout.spec&quot;} {:command &quot;(defn char-seq-&gt;str-conformer [v]\n  (let [[head tail]\n        (reduce\n          (fn [[res padv ] x]\n            (if (= :col-padding-non-bracket-char (first x))\n              [res (conj padv (second x))]\n              (if (empty? padv)\n                [res (conj padv (second x))]\n                [(conj res\n                       [:col-padding (apply str padv)]\n                       [:col-align (get-in x [1 :col-align-char])]) []])))\n\n          [[] []]\n          v)]\n    (if (empty? tail)\n      head\n      (conj head [:col-padding (apply str tail)]))))&quot;, :offset 555, :ns &quot;string-layout.spec&quot;} {:command &quot;(defn char-seq-&gt;str-conformer [v]\n  (let [[head tail]\n        (reduce\n          (fn [[res padv ] x]\n            (if (= :col-padding-non-bracket-char (first x))\n              [res (conj padv (second x))]\n              (let [align [:col-align (get-in x [1 :col-align-char])]]\n                (if (empty? padv)\n                  [(conj res align) padv]\n                  [(conj res\n                         [:col-padding (apply str padv)]\n                         align) []]))))\n          [[] []]\n          v)]\n    (if (empty? tail)\n      head\n      (conj head [:col-padding (apply str tail)]))))&quot;, :offset 593, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string3 \&quot;[R]\&quot;)&quot;, :offset 34, :ns &quot;string-layout.spec&quot;} {:command &quot;(defn char-seq-&gt;str-conformer [v]\n  (let [[head tail]\n        (reduce\n          (fn [[res padv] x]\n            (if (= :col-padding-non-bracket-char (first x))\n              [res (conj padv (second x))]\n              (let [align [:col-align (get-in x [1 :col-align-char])]]\n                (if (empty? padv)\n                  [(conj res align) padv]\n                  [(conj res\n                         [:col-padding (apply str padv)]\n                         align) []]))))\n          [[] []]\n          v)]\n    (prn \&quot;head:\&quot; head \&quot;tail:\&quot; tail)\n    (if (empty? tail)\n      head\n      (conj head [:col-padding (apply str tail)]))))&quot;, :offset 628, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/def ::layout-string3\n  (s/and string?\n         not-empty\n         (s/conformer seq #(apply str %))\n         (s/+ (s/alt :col-align-bracket-expr\n                     (s/cat :left-bracket #{\\[}\n                            :col-align-char #{\\L \\C \\R \\l \\c \\r}\n                            :right-bracket #{\\]})\n                     :col-padding-non-bracket-char\n                     (complement #{\\[ \\]})))))&quot;, :offset 407, :ns &quot;string-layout.spec&quot;} {:command &quot;(defn char-seq-&gt;str-conformer [v]\n  (let [[head tail]\n        (reduce\n          (fn [[res padv] x]\n            (if (= :col-padding-non-bracket-char (first x))\n              [res (conj padv (second x))]\n              (let [align [:col-align (get-in x [1 :col-align-char])]]\n                (if (empty? padv)\n                  [(conj res align) padv]\n                  [(conj res [:col-padding (apply str padv)]\n                         align) []]))))\n          [[] []]\n          v)]\n    (prn \&quot;head:\&quot; head \&quot;tail:\&quot; tail)\n    (if (empty? tail)\n      head\n      (conj head [:col-padding (apply str tail)]))))&quot;, :offset 603, :ns &quot;string-layout.spec&quot;} {:command &quot;(s/conform ::layout-string3 \&quot;ff[R]\&quot;)&quot;, :offset 31, :ns &quot;string-layout.spec&quot;} {:command &quot;(merge {:a 2} {:a 3 :b 3})&quot;, :offset 24, :ns &quot;string-layout.spec&quot;} {:command &quot;(merge {:a 2} {:a 3 :b 5})&quot;, :offset 24, :ns &quot;string-layout.spec&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.lein-repl">
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
      <method />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <module />
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <method />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <method />
    </configuration>
    <configuration default="true" type="ClojureScriptRunConfiguration" factoryName="Clojure Script">
      <module name="" />
      <setting name="path" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="" />
      <setting name="repl" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list />
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <method />
    </configuration>
    <configuration default="true" type="GrailsRunConfigurationType" factoryName="Grails">
      <setting name="vmparams" value="" />
      <setting name="cmdLine" value="run-app" />
      <setting name="passParentEnv" value="true" />
      <setting name="launchBrowser" value="true" />
      <setting name="launchBrowserUrl" value="" />
      <setting name="depsClasspath" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="JarApplication" factoryName="JAR Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="Java Scratch" factoryName="Java Scratch">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="SCRATCH_FILE_ID" value="0" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerJest" factoryName="Jest">
      <node-interpreter value="project" />
      <working-dir value="" />
      <envs />
      <scope-kind value="ALL" />
      <method />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerProtractor" factoryName="Protractor">
      <config-file value="" />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JavascriptDebugType" factoryName="JavaScript Debug">
      <method />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType" factoryName="Kotlin">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="string-layout" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType" factoryName="Kotlin script">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
      <method />
    </configuration>
    <configuration default="true" type="ScalaTestRunConfiguration" factoryName="ScalaTest">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <setting name="path" value="" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="Specs2RunConfiguration" factoryName="Specs2">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <setting name="path" value="" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp" factoryName="Gulp.js">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="js.build_tools.npm" factoryName="npm">
      <command value="run" />
      <scripts />
      <node-interpreter value="project" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="osgi.bnd.run" factoryName="Run Launcher">
      <method />
    </configuration>
    <configuration default="true" type="osgi.bnd.run" factoryName="Test Launcher (JUnit)">
      <method />
    </configuration>
    <configuration default="true" type="uTestRunConfiguration" factoryName="utest">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <setting name="path" value="" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
      <method />
    </configuration>
    <configuration default="false" name="lein-repl" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="string-layout" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <method />
    </configuration>
    <list size="1">
      <item index="0" class="java.lang.String" itemvalue="Clojure REPL.lein-repl" />
    </list>
  </component>
  <component name="SbtLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e3ce2c75-0126-48dc-a917-71cf2831dd61" name="Default" comment="" />
      <created>1492677758664</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1492677758664</updated>
      <workItem from="1492677762807" duration="8439000" />
      <workItem from="1492786764056" duration="141000" />
      <workItem from="1493027372218" duration="6074000" />
      <workItem from="1493034033059" duration="7000" />
      <workItem from="1493043394755" duration="1196000" />
      <workItem from="1493048681622" duration="1925000" />
      <workItem from="1493050691187" duration="1231000" />
      <workItem from="1493191484430" duration="20695000" />
      <workItem from="1493304461955" duration="873000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="60102000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-1" y="-11" width="2562" height="1612" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Nl-Palette" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.52187747" sideWeight="0.5" order="4" side_tool="true" content_ui="tabs" x="424" y="0" width="832" height="1046" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.30983052" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24936387" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.39626417" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Dynamic Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32955304" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
    <layout-to-restore>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Nl-Palette" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.44410318" sideWeight="0.5" order="4" side_tool="true" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Properties" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="true" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.39828694" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24980111" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="processedProjectFiles" value="true" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/test/string_layout/core_test.clj</url>
          <line>52</line>
          <properties />
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
      <option name="time" value="11" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="3" column="29" lean-forward="false" selection-start-line="3" selection-start-column="29" selection-end-line="3" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1800">
          <caret line="60" column="15" lean-forward="false" selection-start-line="60" selection-start-column="15" selection-end-line="60" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/pprint/cl_format.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="585">
          <caret line="26" column="34" lean-forward="true" selection-start-line="26" selection-start-column="34" selection-end-line="26" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/string.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="305" column="16" lean-forward="true" selection-start-line="305" selection-start-column="16" selection-end-line="305" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1920">
          <caret line="64" column="35" lean-forward="false" selection-start-line="64" selection-start-column="35" selection-end-line="64" selection-end-column="35" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="7" column="53" lean-forward="false" selection-start-line="7" selection-start-column="53" selection-end-line="7" selection-end-column="53" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="420">
          <caret line="14" column="55" lean-forward="true" selection-start-line="14" selection-start-column="25" selection-end-line="14" selection-end-column="55" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="924">
          <caret line="42" column="30" lean-forward="false" selection-start-line="42" selection-start-column="30" selection-end-line="42" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1078">
          <caret line="49" column="89" lean-forward="true" selection-start-line="49" selection-start-column="89" selection-end-line="49" selection-end-column="89" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="42">
          <caret line="3" column="29" lean-forward="false" selection-start-line="3" selection-start-column="29" selection-end-line="3" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="854">
          <caret line="61" column="67" lean-forward="false" selection-start-line="61" selection-start-column="67" selection-end-line="61" selection-end-column="67" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="3" column="29" lean-forward="false" selection-start-line="3" selection-start-column="29" selection-end-line="3" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1800">
          <caret line="60" column="15" lean-forward="false" selection-start-line="60" selection-start-column="15" selection-end-line="60" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/pprint/cl_format.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="585">
          <caret line="26" column="34" lean-forward="true" selection-start-line="26" selection-start-column="34" selection-end-line="26" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/string.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="305" column="16" lean-forward="true" selection-start-line="305" selection-start-column="16" selection-end-line="305" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="785">
          <caret line="66" column="2" lean-forward="false" selection-start-line="66" selection-start-column="2" selection-end-line="66" selection-end-column="2" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="562">
          <caret line="112" column="37" lean-forward="false" selection-start-line="112" selection-start-column="37" selection-end-line="112" selection-end-column="37" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="7" column="54" lean-forward="true" selection-start-line="7" selection-start-column="54" selection-end-line="7" selection-end-column="54" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1920">
          <caret line="64" column="35" lean-forward="false" selection-start-line="64" selection-start-column="35" selection-end-line="64" selection-end-column="35" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="924">
          <caret line="42" column="30" lean-forward="false" selection-start-line="42" selection-start-column="30" selection-end-line="42" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1078">
          <caret line="49" column="89" lean-forward="true" selection-start-line="49" selection-start-column="89" selection-end-line="49" selection-end-column="89" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="42">
          <caret line="3" column="29" lean-forward="false" selection-start-line="3" selection-start-column="29" selection-end-line="3" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="854">
          <caret line="61" column="67" lean-forward="false" selection-start-line="61" selection-start-column="67" selection-end-line="61" selection-end-column="67" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="3" column="29" lean-forward="false" selection-start-line="3" selection-start-column="29" selection-end-line="3" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1800">
          <caret line="60" column="15" lean-forward="false" selection-start-line="60" selection-start-column="15" selection-end-line="60" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/pprint/cl_format.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="585">
          <caret line="26" column="34" lean-forward="true" selection-start-line="26" selection-start-column="34" selection-end-line="26" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/midje/midje/1.8.3/midje-1.8.3.jar!/midje/sweet.clj" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/string.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="305" column="16" lean-forward="true" selection-start-line="305" selection-start-column="16" selection-end-line="305" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/string_layout/core_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1920">
          <caret line="64" column="35" lean-forward="false" selection-start-line="64" selection-start-column="35" selection-end-line="64" selection-end-column="35" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="9" column="52" lean-forward="false" selection-start-line="9" selection-start-column="52" selection-end-line="9" selection-end-column="52" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/lang/ISeq.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="7" column="17" lean-forward="false" selection-start-line="7" selection-start-column="17" selection-end-line="7" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/lang/IndexedSeq.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="7" column="38" lean-forward="false" selection-start-line="7" selection-start-column="38" selection-end-line="7" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="jar:///usr/lib/jvm/java-8-oracle/src.zip!/java/lang/CharSequence.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="870">
          <caret line="58" column="17" lean-forward="false" selection-start-line="58" selection-start-column="17" selection-end-line="58" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/lang/StringSeq.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="7" column="54" lean-forward="false" selection-start-line="7" selection-start-column="54" selection-end-line="7" selection-end-column="54" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="7950">
          <caret line="265" column="16" lean-forward="false" selection-start-line="265" selection-start-column="16" selection-end-line="265" selection-end-column="16" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/target/classes/string_layout/core$matias_test_zero.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="600">
          <caret line="27" column="38" lean-forward="true" selection-start-line="27" selection-start-column="38" selection-end-line="27" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/target/classes/string_layout/core$matias_test_one.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/string_layout/spec.clj" />
    <entry file="file://$PROJECT_DIR$/src/string_layout/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1410">
          <caret line="47" column="0" lean-forward="false" selection-start-line="47" selection-start-column="0" selection-end-line="47" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.9.0-alpha15/clojure-1.9.0-alpha15.jar!/clojure/spec.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4410">
          <caret line="147" column="39" lean-forward="false" selection-start-line="147" selection-start-column="39" selection-end-line="147" selection-end-column="39" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/string_layout/spec.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="450">
          <caret line="48" column="80" lean-forward="false" selection-start-line="48" selection-start-column="80" selection-end-line="48" selection-end-column="80" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <last-edited>groovy-2.4.6</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.6</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>string-layout</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.7</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clj-time:0.11.0</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>